# Generated by Django 3.0.6 on 2020-06-02 11:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('college_id', models.PositiveIntegerField(default=1)),
                ('class_id', models.PositiveSmallIntegerField(default=1)),
                ('hours', models.SmallIntegerField(default=64)),
                ('credit', models.DecimalField(decimal_places=1, max_digits=2)),
                ('course_code', models.CharField(max_length=1000, null=True)),
                ('visit_count', models.IntegerField()),
                ('teacher', models.CharField(max_length=100, null=True)),
                ('elective', models.SmallIntegerField(default=0)),
                ('average_grade', models.CharField(max_length=10, null=True)),
                ('lessonsAddress', models.CharField(max_length=1000, null=True)),
                ('XQ1', models.CharField(blank=True, max_length=1000, null=True)),
                ('XQ2', models.CharField(blank=True, max_length=1000, null=True)),
                ('XQ3', models.CharField(blank=True, max_length=1000, null=True)),
                ('XQ4', models.CharField(blank=True, max_length=1000, null=True)),
                ('XQ5', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course_Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Course_Table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lessonsName', models.CharField(max_length=1000, null=True)),
                ('lessonsAddress', models.CharField(blank=True, max_length=1000, null=True)),
                ('lessonsTeacher', models.CharField(max_length=1000, null=True)),
                ('XQ1', models.CharField(blank=True, max_length=1000, null=True)),
                ('XQ2', models.CharField(blank=True, max_length=1000, null=True)),
                ('XQ3', models.CharField(blank=True, max_length=1000, null=True)),
                ('XQ4', models.CharField(blank=True, max_length=1000, null=True)),
                ('XQ5', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmailVerifyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='验证码')),
                ('email', models.EmailField(max_length=50, verbose_name='邮箱')),
                ('send_type', models.CharField(choices=[('register', '注册'), ('forget', '找回密码')], max_length=10, verbose_name='验证码类型')),
                ('send_time', models.DateTimeField(auto_now_add=True, verbose_name='发送时间')),
            ],
            options={
                'verbose_name': '邮箱验证码',
                'verbose_name_plural': '邮箱验证码',
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('content', models.TextField()),
                ('post_time', models.DateTimeField(auto_now_add=True)),
                ('edit_time', models.DateTimeField(auto_now_add=True)),
                ('editor', models.IntegerField()),
                ('is_main', models.BooleanField()),
                ('pos_eva_count', models.IntegerField(default=0)),
                ('neg_eva_count', models.IntegerField(default=0)),
                ('comment_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Follow_Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('follow_id', models.IntegerField()),
                ('to_comment_id', models.IntegerField(null=True)),
                ('content', models.TextField()),
                ('post_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Follow_Evaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('follow_id', models.IntegerField()),
                ('grade', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='IpVisitInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=20)),
                ('early_date', models.CharField(max_length=20)),
                ('latest_date', models.CharField(max_length=20)),
                ('visit_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_id', models.IntegerField()),
                ('category', models.IntegerField()),
                ('title', models.CharField(max_length=30)),
                ('main_follow_id', models.IntegerField()),
                ('update_time', models.DateTimeField(auto_now_add=True)),
                ('follow_count', models.IntegerField(default=0)),
                ('click_count', models.IntegerField(default=0)),
                ('intro', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='R_Course_User_Contribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField()),
                ('user_id', models.PositiveIntegerField()),
                ('course_id', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='R_Course_User_Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('course_id', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='R_Resource_User_Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('resource_id', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_time', models.DateTimeField(auto_now_add=True)),
                ('report_user_id', models.PositiveIntegerField(blank=True)),
                ('be_reported_resource_id', models.PositiveIntegerField()),
                ('already_handle', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField()),
                ('link', models.FileField(blank=True, upload_to='uploads/%Y/%m')),
                ('name', models.CharField(max_length=300)),
                ('intro', models.TextField()),
                ('upload_user_id', models.PositiveIntegerField()),
                ('upload_time', models.DateTimeField(auto_now_add=True)),
                ('only_url', models.BooleanField()),
                ('url', models.CharField(blank=True, max_length=1000)),
                ('course_code', models.CharField(blank=True, max_length=10)),
                ('download_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Resource_Evaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('resource_id', models.IntegerField()),
                ('grade', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Tongpao_Userprofile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=15, unique=True)),
                ('tongpao_username', models.CharField(max_length=32, null=True)),
                ('phone_number', models.BigIntegerField(null=True)),
                ('email', models.CharField(max_length=254, null=True)),
                ('real_name', models.CharField(max_length=50, null=True)),
                ('birthday', models.DateTimeField()),
                ('gender', models.CharField(max_length=5, null=True)),
                ('grade', models.CharField(max_length=10, null=True)),
                ('college', models.CharField(max_length=30, null=True)),
                ('major', models.CharField(max_length=20, null=True)),
                ('class_name', models.CharField(max_length=20, null=True)),
                ('identification', models.CharField(max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=1)),
                ('nickname', models.CharField(max_length=20)),
                ('intro', models.TextField()),
                ('college_id', models.PositiveIntegerField(blank=True, default=None)),
                ('user_photo', models.ImageField(blank=True, null=True, upload_to='user_photo')),
                ('is_ynu', models.CharField(default='0', max_length=1)),
                ('studentid', models.CharField(blank=True, max_length=20, null=True)),
                ('studentpassword', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Coursestudentgrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(blank=True, max_length=10, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='student',
            field=models.ManyToManyField(max_length=128, through='backend.Coursestudentgrade', to=settings.AUTH_USER_MODEL),
        ),
    ]
